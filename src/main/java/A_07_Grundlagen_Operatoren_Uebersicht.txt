
     ________________________________________________________________________________________________________________________
    | Syntax/Konzept        | Funktion                                                                                       |
    |-----------------------|------------------------------------------------------------------------------------------------|
    | + (Arithmetisch)      | Addiert zwei Werte.                                                                            |
    | - (Arithmetisch)      | Subtrahiert den zweiten Wert vom ersten oder negiert einen einzelnen Wert.                     |
    | * (Arithmetisch)      | Multipliziert zwei Werte.                                                                      |
    | / (Arithmetisch)      | Dividiert den ersten Wert durch den zweiten.                                                   |
    | % (Arithmetisch)      | Gibt den Rest einer Division zurück.                                                           |
    | ++ (Arithmetisch)     | Inkrementiert den Wert um 1.                                                                   |
    | -- (Arithmetisch)     | Dekrementiert den Wert um 1.                                                                   |
    | == (Vergleich)        | Prüft auf Gleichheit zwischen zwei Werten.                                                     |
    | != (Vergleich)        | Prüft auf Ungleichheit zwischen zwei Werten.                                                   |
    | > (Vergleich)         | Prüft, ob der erste Wert größer als der zweite ist.                                            |
    | < (Vergleich)         | Prüft, ob der erste Wert kleiner als der zweite ist.                                           |
    | >= (Vergleich)        | Prüft, ob der erste Wert größer oder gleich dem zweiten ist.                                   |
    | <= (Vergleich)        | Prüft, ob der erste Wert kleiner oder gleich dem zweiten ist.                                  |
    | && (Logisch)          | Gibt `true` zurück, wenn beide Ausdrücke `true` sind (logisches UND).                          |
    | || (Logisch)          | Gibt `true` zurück, wenn mindestens einer der Ausdrücke `true` ist (logisches ODER).           |
    | ! (Logisch)           | Negiert den Wahrheitswert des Ausdrucks (logisches NICHT).                                     |
    | & (Bitweise/Logisch)  | Führt eine bitweise UND-Operation oder ein logisches UND (wenn boolean) durch.                 |
    | | (Bitweise/Logisch)  | Führt eine bitweise ODER-Operation oder ein logisches ODER (wenn boolean) durch.               |
    | ^ (Bitweise/Logisch)  | Führt eine bitweise XOR-Operation oder ein logisches XOR (wenn boolean) durch.                 |
    | ~ (Bitweise)          | Negiert bitweise den Wert.                                                                     |
    | << (Bitweise)         | Verschiebt die Bits nach links.                                                                |
    | >> (Bitweise)         | Verschiebt die Bits nach rechts und behält das Vorzeichen bei.                                 |
    | >>> (Bitweise)        | Verschiebt die Bits nach rechts und setzt das Vorzeichen auf 0.                                |
    | = (Zuweisung)         | Weist den Wert auf der rechten Seite dem Operanden auf der linken Seite zu.                    |
    | += (Zuweisung)        | Addiert den Wert auf der rechten Seite zum Wert auf der linken Seite und weist das Ergebnis zu.|
    | -= (Zuweisung)        | Subtrahiert den Wert auf der rechten Seite vom Wert auf der linken Seite und weist zu.         |
    | *= (Zuweisung)        | Multipliziert und weist das Ergebnis zu.                                                       |
    | /= (Zuweisung)        | Dividiert und weist das Ergebnis zu.                                                           |
    | %= (Zuweisung)        | Berechnet den Rest und weist ihn zu.                                                           |
    | &= (Zuweisung)        | Führt eine bitweise UND-Operation durch und weist das Ergebnis zu.                             |
    | |= (Zuweisung)        | Führt eine bitweise ODER-Operation durch und weist das Ergebnis zu.                            |
    | ^= (Zuweisung)        | Führt eine bitweise XOR-Operation durch und weist das Ergebnis zu.                             |
    | <<= (Zuweisung)       | Verschiebt die Bits nach links und weist das Ergebnis zu.                                      |
    | >>= (Zuweisung)       | Verschiebt die Bits nach rechts und weist das Ergebnis zu.                                     |
    | >>>= (Zuweisung)      | Verschiebt die Bits nach rechts mit Nullen und weist das Ergebnis zu.                          |
    | ?: (Ternär)           | Wählt zwischen zwei Werten basierend auf einer Bedingung aus.                                  |
    | instanceof            | Prüft, ob das Objekt eine Instanz eines bestimmten Typs ist.                                   |
    | . (Punktoperator)     | Zugriff auf Klassen- oder Objektmitglieder.                                                    |
    | :: (Methodenreferenz) | Verweist auf Methoden oder Konstruktoren einer Klasse, oft verwendet in Lambda-Ausdrücken.     |
    | (type) (Type Cast)    | Konvertiert explizit von einem Typ in einen anderen.                                           |
    | -> (Lambda-Ausdruck)  | Definiert eine anonyme Funktion für die Verwendung in Lambda-Ausdrücken.                       |
    | [] (Array-Zugriff)    | Greift auf ein Element eines Arrays zu.                                                        |
    | synchronized (Block)  | Markiert Blöcke, die synchronisiert werden müssen, um Thread-Sicherheit zu gewährleisten.      |
    | try-with-resources    | Automatisches Schließen von Ressourcen, die das AutoCloseable-Interface implementieren.        |
    -------------------------------------------------------------------------------------------------------------------------

    Der Begriff "arithmetisch" bezieht sich auf die Grundlagen und Methoden der Arithmetik, einem Zweig der Mathematik,
    der sich mit Zahlen und den grundlegenden Operationen befasst, die mit ihnen durchgeführt werden können.

    Diese grundlegenden Operationen umfassen:

    Addition (+): Das Zusammenzählen von zwei oder mehr Zahlen, um ihre Summe zu finden.
    Subtraktion (-): Das Abziehen einer Zahl von einer anderen, um die Differenz zu ermitteln.
    Multiplikation (× oder ·): Das Vervielfachen einer Zahl mit einer anderen, um das Produkt zu erhalten.
    Division (÷ oder /): Das Teilen einer Zahl durch eine andere, um den Quotienten zu bestimmen.

    Arithmetische Operationen können auch erweitert werden, um fortgeschrittenere Konzepte wie Potenzierung (das Erheben einer Zahl zu der Potenz einer anderen Zahl),
    Wurzelziehen und den Gebrauch negativer Zahlen und Brüche einzuschließen.

    Im weiteren Sinne bezieht sich "arithmetisch" auf alles, was mit diesen grundlegenden mathematischen Operationen und Prinzipien zu tun hat,
    einschließlich arithmetischer Reihen in der Algebra, wo der Begriff verwendet wird, um eine Sequenz von Zahlen zu beschreiben,
    die durch die wiederholte Addition oder Subtraktion einer konstanten Zahl (der Differenz) gebildet wird.
